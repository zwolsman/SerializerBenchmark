// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChainObject.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ChainObject.proto</summary>
public static partial class ChainObjectReflection {

  #region Descriptor
  /// <summary>File descriptor for ChainObject.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ChainObjectReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFDaGFpbk9iamVjdC5wcm90byJqChBDaGFpbk9iamVjdFByb3RvEg8KB2No",
          "YWluSWQYASABKAkSFwoPYXR0cmlidXRlVHlwZWlkGAIgASgFEg0KBXZhbHVl",
          "GAMgASgBEh0KC2Nvb3JkaW5hdGVzGAQgAygLMgguQzFQcm90byIfCgdDMVBy",
          "b3RvEgkKAXgYASABKAESCQoBeRgCIAEoAWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ChainObjectProto), global::ChainObjectProto.Parser, new[]{ "ChainId", "AttributeTypeid", "Value", "Coordinates" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C1Proto), global::C1Proto.Parser, new[]{ "X", "Y" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ChainObjectProto : pb::IMessage<ChainObjectProto> {
  private static readonly pb::MessageParser<ChainObjectProto> _parser = new pb::MessageParser<ChainObjectProto>(() => new ChainObjectProto());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChainObjectProto> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ChainObjectReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChainObjectProto() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChainObjectProto(ChainObjectProto other) : this() {
    chainId_ = other.chainId_;
    attributeTypeid_ = other.attributeTypeid_;
    value_ = other.value_;
    coordinates_ = other.coordinates_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChainObjectProto Clone() {
    return new ChainObjectProto(this);
  }

  /// <summary>Field number for the "chainId" field.</summary>
  public const int ChainIdFieldNumber = 1;
  private string chainId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ChainId {
    get { return chainId_; }
    set {
      chainId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "attributeTypeid" field.</summary>
  public const int AttributeTypeidFieldNumber = 2;
  private int attributeTypeid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AttributeTypeid {
    get { return attributeTypeid_; }
    set {
      attributeTypeid_ = value;
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 3;
  private double value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  /// <summary>Field number for the "coordinates" field.</summary>
  public const int CoordinatesFieldNumber = 4;
  private static readonly pb::FieldCodec<global::C1Proto> _repeated_coordinates_codec
      = pb::FieldCodec.ForMessage(34, global::C1Proto.Parser);
  private readonly pbc::RepeatedField<global::C1Proto> coordinates_ = new pbc::RepeatedField<global::C1Proto>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::C1Proto> Coordinates {
    get { return coordinates_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChainObjectProto);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChainObjectProto other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChainId != other.ChainId) return false;
    if (AttributeTypeid != other.AttributeTypeid) return false;
    if (Value != other.Value) return false;
    if(!coordinates_.Equals(other.coordinates_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChainId.Length != 0) hash ^= ChainId.GetHashCode();
    if (AttributeTypeid != 0) hash ^= AttributeTypeid.GetHashCode();
    if (Value != 0D) hash ^= Value.GetHashCode();
    hash ^= coordinates_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ChainId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ChainId);
    }
    if (AttributeTypeid != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AttributeTypeid);
    }
    if (Value != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Value);
    }
    coordinates_.WriteTo(output, _repeated_coordinates_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChainId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ChainId);
    }
    if (AttributeTypeid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttributeTypeid);
    }
    if (Value != 0D) {
      size += 1 + 8;
    }
    size += coordinates_.CalculateSize(_repeated_coordinates_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChainObjectProto other) {
    if (other == null) {
      return;
    }
    if (other.ChainId.Length != 0) {
      ChainId = other.ChainId;
    }
    if (other.AttributeTypeid != 0) {
      AttributeTypeid = other.AttributeTypeid;
    }
    if (other.Value != 0D) {
      Value = other.Value;
    }
    coordinates_.Add(other.coordinates_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ChainId = input.ReadString();
          break;
        }
        case 16: {
          AttributeTypeid = input.ReadInt32();
          break;
        }
        case 25: {
          Value = input.ReadDouble();
          break;
        }
        case 34: {
          coordinates_.AddEntriesFrom(input, _repeated_coordinates_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class C1Proto : pb::IMessage<C1Proto> {
  private static readonly pb::MessageParser<C1Proto> _parser = new pb::MessageParser<C1Proto>(() => new C1Proto());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C1Proto> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ChainObjectReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C1Proto() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C1Proto(C1Proto other) : this() {
    x_ = other.x_;
    y_ = other.y_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C1Proto Clone() {
    return new C1Proto(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private double x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private double y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C1Proto);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C1Proto other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0D) hash ^= X.GetHashCode();
    if (Y != 0D) hash ^= Y.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(X);
    }
    if (Y != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Y);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0D) {
      size += 1 + 8;
    }
    if (Y != 0D) {
      size += 1 + 8;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C1Proto other) {
    if (other == null) {
      return;
    }
    if (other.X != 0D) {
      X = other.X;
    }
    if (other.Y != 0D) {
      Y = other.Y;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 9: {
          X = input.ReadDouble();
          break;
        }
        case 17: {
          Y = input.ReadDouble();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
